{"ast":null,"code":"/*\n * JavaScript Load Image Fetch\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2017, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, require */\n\n;\n(function (factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'));\n  } else {\n    // Browser globals:\n    factory(window.loadImage);\n  }\n})(function (loadImage) {\n  'use strict';\n\n  if (typeof fetch !== 'undefined' && typeof Request !== 'undefined') {\n    loadImage.fetchBlob = function (url, callback, options) {\n      fetch(new Request(url, options)).then(function (response) {\n        return response.blob();\n      }).then(callback).catch(function (err) {\n        callback(null, err);\n      });\n    };\n  } else if (\n  // Check for XHR2 support:\n  typeof XMLHttpRequest !== 'undefined' && typeof ProgressEvent !== 'undefined') {\n    loadImage.fetchBlob = function (url, callback, options) {\n      // eslint-disable-next-line no-param-reassign\n      options = options || {};\n      var req = new XMLHttpRequest();\n      req.open(options.method || 'GET', url);\n      if (options.headers) {\n        Object.keys(options.headers).forEach(function (key) {\n          req.setRequestHeader(key, options.headers[key]);\n        });\n      }\n      req.withCredentials = options.credentials === 'include';\n      req.responseType = 'blob';\n      req.onload = function () {\n        callback(req.response);\n      };\n      req.onerror = req.onabort = req.ontimeout = function (err) {\n        callback(null, err);\n      };\n      req.send(options.body);\n    };\n  }\n});","map":null,"metadata":{},"sourceType":"script"}